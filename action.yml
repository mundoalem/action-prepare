# yamllint disable rule:document-start rule:line-length

# ##############################################################################
# ACTION
# ##############################################################################

# ------------------------------------------------------------------------------
# METADATA
# ------------------------------------------------------------------------------

#
# GENERAL
#

name: "Prepare"
description: "Prepare the runner environment for jobs of a specific project type"

#
# BRANDING
#

branding:
  icon: "circle"
  color: "gray-dark"

# ##############################################################################
# INPUTS
# ##############################################################################

inputs:
  job:
    description: "Job we are preparing for"
    required: true

  type:
    description: "Project type we are preparing for"
    required: true

  version_alejandra:
    description: "Version of alejandra to be installed"
    required: false
    default: "3.1.0"

  version_checkov:
    description: "Version of checkov to be installed"
    required: false
    default: "3.1.38"

  version_hadolint:
    description: "Version of hadolint to be installed"
    required: false
    default: "2.12.0"

  version_task:
    description: "Version of task to be installed"
    required: false
    default: "3.40.0"

# ##############################################################################
# OUTPUTS
# ##############################################################################

#
# Empty
#

# ##############################################################################
# RUN
# ##############################################################################

runs:
  using: "composite"
  steps:
    - name: check runner os
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=unsupported os"
        exit 1

    - name: install hadolint
      if: ${{ inputs.type == 'container' && inputs.job == 'lint' }}
      shell: bash
      run: |
        if [ ${{ runner.arch }} = "ARM64" ]; then
          ARCH="arm64"
        elif [ ${{ runner.arch }} = "X64" ]; then
          ARCH="x86_64"
        else
          echo "::error title=unsupported cpu architecture"
          exit 1
        fi

        curl -fsSL \
          -o /usr/local/bin/hadolint \
          "https://github.com/hadolint/hadolint/releases/download/v${{ inputs.version_hadolint }}/hadolint-Linux-${ARCH}"

        chmod +x /usr/local/bin/hadolint

    - name: install checkov
      if: ${{ inputs.type == 'container' && inputs.job == 'scan' }}
      shell: bash
      run: |
        pip install --user checkov==${{ inputs.version_checkov }}
        which checkov

    - name: setup qemu
      if: ${{ inputs.type == 'container' && ( inputs.job == 'ci' || inputs.job == 'cd')}}
      uses: docker/setup-qemu-action@v3

    - name: setup docker buildx
      if: ${{ inputs.type == 'container' && inputs.job == 'cd' }}
      uses: docker/setup-buildx-action@v1

    - name: setup task
      if: ${{ inputs.type == 'nix' }}
      shell: bash
      run: |
        if [ ${{ runner.arch }} = "ARM64" ]; then
          ARCH="arm64"
        elif [ ${{ runner.arch }} = "X64" ]; then
          ARCH="amd64"
        else
          echo "::error title=unsupported cpu architecture"
          exit 1
        fi

        curl -fsSL \
          "https://github.com/go-task/task/releases/download/v${{ inputs.version_task }}/task_linux_${ARCH}.tar.gz" \
          | tar zxf - task

        mv task /usr/local/bin
        chmod +x /usr/local/bin/task

    - name: setup alejandra
      if: ${{ inputs.type == 'nix' && ( inputs.job == 'ci' || inputs.job == 'lint' ) }}
      shell: bash
      run: |
        if [ ${{ runner.arch }} = "ARM64" ]; then
          ARCH="aarch64"
        elif [ ${{ runner.arch }} = "X64" ]; then
          ARCH="x86_64"
        else
          echo "::error title=unsupported cpu architecture"
          exit 1
        fi

        curl -fsSL \
          -o /usr/local/bin/alejandra \
          "https://github.com/kamadorueda/alejandra/releases/download/${{ inputs.version_alejandra }}/alejandra-${ARCH}-unknown-linux-gnu"

        chmod +x /usr/local/bin/alejandra
